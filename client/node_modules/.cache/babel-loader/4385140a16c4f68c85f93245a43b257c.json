{"ast":null,"code":"const {\n  createSelector\n} = require(\"reselect\");\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(selectShop, shop => shop.collections);\nexport const selectCollectionForPreview = createSelector(selectCollections, collections => collections ? Object.keys(collections).map(key => collections[key]) : []);\nexport const selectCollection = collectionUrlParam => createSelector([selectCollections], collections => collections ? collections[collectionUrlParam] : null);\nexport const selectIsCollectionFetching = createSelector(selectShop, shop => shop.isFetching);\nexport const selectIsCollectionLoaded = createSelector(selectShop, shop => !!shop.collections);","map":{"version":3,"sources":["/Users/umair/Projects/React/crwn-clothing/src/redux/shop/shop.selectors.js"],"names":["createSelector","require","selectShop","state","shop","selectCollections","collections","selectCollectionForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","isFetching","selectIsCollectionLoaded"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAqBC,OAAO,CAAC,UAAD,CAAlC;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAApC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGL,cAAc,CAC7CE,UAD6C,EAE5CE,IAAD,IAAUA,IAAI,CAACE,WAF8B,CAAxC;AAKP,OAAO,MAAMC,0BAA0B,GAAGP,cAAc,CACtDK,iBADsD,EAErDC,WAAD,IACEA,WAAW,GAAGE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA8BC,GAAD,IAASL,WAAW,CAACK,GAAD,CAAjD,CAAH,GAA6D,EAHpB,CAAjD;AAMP,OAAO,MAAMC,gBAAgB,GAAIC,kBAAD,IAC9Bb,cAAc,CAAC,CAACK,iBAAD,CAAD,EAAuBC,WAAD,IAClCA,WAAW,GAAGA,WAAW,CAACO,kBAAD,CAAd,GAAqC,IADpC,CADT;AAKP,OAAO,MAAMC,0BAA0B,GAAGd,cAAc,CACtDE,UADsD,EAErDE,IAAD,IAAUA,IAAI,CAACW,UAFuC,CAAjD;AAKP,OAAO,MAAMC,wBAAwB,GAAGhB,cAAc,CACpDE,UADoD,EAEnDE,IAAD,IAAU,CAAC,CAACA,IAAI,CAACE,WAFmC,CAA/C","sourcesContent":["const { createSelector } = require(\"reselect\");\n\nconst selectShop = (state) => state.shop;\n\nexport const selectCollections = createSelector(\n  selectShop,\n  (shop) => shop.collections\n);\n\nexport const selectCollectionForPreview = createSelector(\n  selectCollections,\n  (collections) =>\n    collections ? Object.keys(collections).map((key) => collections[key]) : []\n);\n\nexport const selectCollection = (collectionUrlParam) =>\n  createSelector([selectCollections], (collections) =>\n    collections ? collections[collectionUrlParam] : null\n  );\n\nexport const selectIsCollectionFetching = createSelector(\n  selectShop,\n  (shop) => shop.isFetching\n);\n\nexport const selectIsCollectionLoaded = createSelector(\n  selectShop,\n  (shop) => !!shop.collections\n);\n"]},"metadata":{},"sourceType":"module"}