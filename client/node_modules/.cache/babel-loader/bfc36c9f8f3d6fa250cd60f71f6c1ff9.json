{"ast":null,"code":"import { call, put, takeLatest } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shop.type\";\nimport { convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from \"./shop.action\";\nexport function* fetchCollectionAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["/Users/umair/Projects/React/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["call","put","takeLatest","ShopActionTypes","convertCollectionsSnapshotToMap","firestore","fetchCollectionsFailure","fetchCollectionsSuccess","fetchCollectionAsync","collectionRef","collection","snapshot","get","collectionMap","error","message","fetchCollectionStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SACEC,+BADF,EAEEC,SAFF,QAGO,+BAHP;AAIA,SACEC,uBADF,EAEEC,uBAFF,QAGO,eAHP;AAIA,OAAO,UAAUC,oBAAV,GAAiC;AACtC,MAAI;AACF,UAAMC,aAAa,GAAGJ,SAAS,CAACK,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,aAAa,GAAG,MAAMb,IAAI,CAACI,+BAAD,EAAkCO,QAAlC,CAAhC;AACA,UAAMV,GAAG,CAACM,uBAAuB,CAACM,aAAD,CAAxB,CAAT;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,UAAMb,GAAG,CAACK,uBAAuB,CAACQ,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACtC,QAAMd,UAAU,CACdC,eAAe,CAACc,uBADF,EAEdT,oBAFc,CAAhB;AAID","sourcesContent":["import { call, put, takeLatest } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shop.type\";\nimport {\n  convertCollectionsSnapshotToMap,\n  firestore,\n} from \"../../firebase/firebase.utils\";\nimport {\n  fetchCollectionsFailure,\n  fetchCollectionsSuccess,\n} from \"./shop.action\";\nexport function* fetchCollectionAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n\nexport function* fetchCollectionStart() {\n  yield takeLatest(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}