{"ast":null,"code":"import { auth, createUserDocument, getCurrentUser, googleProvider } from \"../../firebase/firebase.utils\";\nimport { signInFailure, signInSuccess, signOutFailure, signOutSuccess, signUpFailure, signUpSuccess } from \"./user.actions\";\n\nconst {\n  takeLatest,\n  put,\n  call,\n  all\n} = require(\"redux-saga/effects\");\n\nconst {\n  UserActionTypes\n} = require(\"./user.types\");\n\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    const userRef = yield call(createUserDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    put(signOutFailure(error));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield createUserDocument(user, {\n      displayName\n    });\n    yield put(signUpSuccess(user, {\n      displayName\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* onSignUp() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUp)]);\n}","map":{"version":3,"sources":["/Users/umair/Projects/React/crwn-clothing/client/src/redux/user/user.sagas.js"],"names":["auth","createUserDocument","getCurrentUser","googleProvider","signInFailure","signInSuccess","signOutFailure","signOutSuccess","signUpFailure","signUpSuccess","takeLatest","put","call","all","require","UserActionTypes","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","isUserAuthenticated","userAuth","onCheckUserSession","CHECK_USER_SESSION","signOut","onSignOutStart","SIGN_OUT_START","signUp","displayName","createUserWithEmailAndPassword","onSignUp","SIGN_UP_START","userSagas"],"mappings":"AAAA,SACEA,IADF,EAEEC,kBAFF,EAGEC,cAHF,EAIEC,cAJF,QAKO,+BALP;AAMA,SACEC,aADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,cAJF,EAKEC,aALF,EAMEC,aANF,QAOO,gBAPP;;AASA,MAAM;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,GAAd;AAAmBC,EAAAA,IAAnB;AAAyBC,EAAAA;AAAzB,IAAiCC,OAAO,CAAC,oBAAD,CAA9C;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAsBD,OAAO,CAAC,cAAD,CAAnC;;AAEA,OAAO,UAAUE,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMjB,IAAI,CAACkB,eAAL,CAAqBf,cAArB,CAAvB;AACA,UAAMgB,OAAO,GAAG,MAAMP,IAAI,CAACX,kBAAD,EAAqBgB,IAArB,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AAEA,UAAMV,GAAG,CAACN,aAAa,CAAC;AAAEiB,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAd,CAAT;AACD,GAND,CAME,OAAOC,KAAP,EAAc;AACd,UAAMb,GAAG,CAACP,aAAa,CAACoB,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAMf,UAAU,CAACK,eAAe,CAACW,oBAAjB,EAAuCV,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUW,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjE,MAAI;AACF,UAAM;AAAEb,MAAAA;AAAF,QAAW,MAAMjB,IAAI,CAAC+B,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMX,OAAO,GAAG,MAAMP,IAAI,CAACX,kBAAD,EAAqBgB,IAArB,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMV,GAAG,CAACN,aAAa,CAAC;AAAEiB,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAd,CAAT;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACdb,IAAAA,GAAG,CAACP,aAAa,CAACoB,KAAD,CAAd,CAAH;AACD;AACF;AAED,OAAO,UAAUQ,kBAAV,GAA+B;AACpC,QAAMtB,UAAU,CAACK,eAAe,CAACkB,mBAAjB,EAAsCN,eAAtC,CAAhB;AACD;AAED,OAAO,UAAUO,mBAAV,GAAgC;AACrC,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMjC,cAAc,EAArC;AACA,QAAI,CAACiC,QAAL,EAAe;AACf,UAAMhB,OAAO,GAAG,MAAMP,IAAI,CAACX,kBAAD,EAAqBkC,QAArB,CAA1B;AACA,UAAMf,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMV,GAAG,CAACN,aAAa,CAAC;AAAEiB,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAd,CAAT;AACD,GAND,CAME,OAAOC,KAAP,EAAc;AACd,UAAMb,GAAG,CAACP,aAAa,CAACoB,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUY,kBAAV,GAA+B;AACpC,QAAM1B,UAAU,CAACK,eAAe,CAACsB,kBAAjB,EAAqCH,mBAArC,CAAhB;AACD;AAED,OAAO,UAAUI,OAAV,GAAoB;AACzB,MAAI;AACF,UAAMtC,IAAI,CAACsC,OAAL,EAAN;AACA,UAAM3B,GAAG,CAACJ,cAAc,EAAf,CAAT;AACD,GAHD,CAGE,OAAOiB,KAAP,EAAc;AACdb,IAAAA,GAAG,CAACL,cAAc,CAACkB,KAAD,CAAf,CAAH;AACD;AACF;AACD,OAAO,UAAUe,cAAV,GAA2B;AAChC,QAAM7B,UAAU,CAACK,eAAe,CAACyB,cAAjB,EAAiCF,OAAjC,CAAhB;AACD;AAED,OAAO,UAAUG,MAAV,CAAiB;AAAEb,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBY,IAAAA;AAAnB;AAAX,CAAjB,EAAgE;AACrE,MAAI;AACF,UAAM;AAAEzB,MAAAA;AAAF,QAAW,MAAMjB,IAAI,CAAC2C,8BAAL,CAAoCd,KAApC,EAA2CC,QAA3C,CAAvB;AACA,UAAM7B,kBAAkB,CAACgB,IAAD,EAAO;AAAEyB,MAAAA;AAAF,KAAP,CAAxB;AACA,UAAM/B,GAAG,CAACF,aAAa,CAACQ,IAAD,EAAO;AAAEyB,MAAAA;AAAF,KAAP,CAAd,CAAT;AACD,GAJD,CAIE,OAAOlB,KAAP,EAAc;AACd,UAAMb,GAAG,CAACH,aAAa,CAACgB,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUoB,QAAV,GAAqB;AAC1B,QAAMlC,UAAU,CAACK,eAAe,CAAC8B,aAAjB,EAAgCJ,MAAhC,CAAhB;AACD;AAED,OAAO,UAAUK,SAAV,GAAsB;AAC3B,QAAMjC,GAAG,CAAC,CACRD,IAAI,CAACa,mBAAD,CADI,EAERb,IAAI,CAACoB,kBAAD,CAFI,EAGRpB,IAAI,CAACwB,kBAAD,CAHI,EAIRxB,IAAI,CAAC2B,cAAD,CAJI,EAKR3B,IAAI,CAACgC,QAAD,CALI,CAAD,CAAT;AAOD","sourcesContent":["import {\n  auth,\n  createUserDocument,\n  getCurrentUser,\n  googleProvider,\n} from \"../../firebase/firebase.utils\";\nimport {\n  signInFailure,\n  signInSuccess,\n  signOutFailure,\n  signOutSuccess,\n  signUpFailure,\n  signUpSuccess,\n} from \"./user.actions\";\n\nconst { takeLatest, put, call, all } = require(\"redux-saga/effects\");\nconst { UserActionTypes } = require(\"./user.types\");\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserDocument, user);\n    const userSnapshot = yield userRef.get();\n\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    put(signInFailure(error));\n  }\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    const userRef = yield call(createUserDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    put(signOutFailure(error));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nexport function* signUp({ payload: { email, password, displayName } }) {\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield createUserDocument(user, { displayName });\n    yield put(signUpSuccess(user, { displayName }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\n\nexport function* onSignUp() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart),\n    call(onSignUp),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}