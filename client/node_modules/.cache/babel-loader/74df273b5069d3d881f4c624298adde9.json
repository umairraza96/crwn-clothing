{"ast":null,"code":"import { convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\nimport ShopActionTypes from \"./shop.type\";\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionMap\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionMap)); // updateCollections(collectionsMap)\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});","map":{"version":3,"sources":["/Users/umair/Projects/React/crwn-clothing/client/src/redux/shop/shop.action.js"],"names":["convertCollectionsSnapshotToMap","firestore","ShopActionTypes","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","fetchCollectionsFailure","message","errorMessage","FETCH_COLLECTIONS_FAILURE"],"mappings":"AAAA,SACEA,+BADF,EAEEC,SAFF,QAGO,+BAHP;AAIA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEF,eAAe,CAACG;AADoB,CAAP,CAA9B;AAGP,OAAO,MAAMC,uBAAuB,GAAIC,aAAD,KAAoB;AACzDH,EAAAA,IAAI,EAAEF,eAAe,CAACM,yBADmC;AAEzDC,EAAAA,OAAO,EAAEF;AAFgD,CAApB,CAAhC;AAKP,OAAO,MAAMG,0BAA0B,GAAG,MAAM;AAC9C,SAAQC,QAAD,IAAc;AACnB,UAAMC,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACR,qBAAqB,EAAtB,CAAR;AAEAS,IAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,YAAMT,aAAa,GAAGP,+BAA+B,CAACgB,QAAD,CAArD;AACAL,MAAAA,QAAQ,CAACL,uBAAuB,CAACC,aAAD,CAAxB,CAAR,CAFkB,CAGlB;AACD,KANH,EAOGU,KAPH,CAOUC,KAAD,IAAWP,QAAQ,CAACQ,uBAAuB,CAACD,KAAK,CAACE,OAAP,CAAxB,CAP5B;AAQD,GAZD;AAaD,CAdM;AAgBP,OAAO,MAAMD,uBAAuB,GAAIE,YAAD,KAAmB;AACxDjB,EAAAA,IAAI,EAAEF,eAAe,CAACoB,yBADkC;AAExDb,EAAAA,OAAO,EAAEY;AAF+C,CAAnB,CAAhC","sourcesContent":["import {\n  convertCollectionsSnapshotToMap,\n  firestore,\n} from \"../../firebase/firebase.utils\";\nimport ShopActionTypes from \"./shop.type\";\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\n});\nexport const fetchCollectionsSuccess = (collectionMap) => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionMap,\n});\n\nexport const fetchCollectionsStartAsync = () => {\n  return (dispatch) => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n\n    collectionRef\n      .get()\n      .then((snapshot) => {\n        const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n        dispatch(fetchCollectionsSuccess(collectionMap));\n        // updateCollections(collectionsMap)\n      })\n      .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};\n\nexport const fetchCollectionsFailure = (errorMessage) => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage,\n});\n"]},"metadata":{},"sourceType":"module"}